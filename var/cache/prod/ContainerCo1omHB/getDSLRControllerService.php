<?php

namespace ContainerCo1omHB;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getDSLRControllerService extends App_KernelProdContainer
{
    /*
     * Gets the public 'App\Controller\DSLRController' shared autowired service.
     *
     * @return \App\Controller\DSLRController
     */
    public static function do($container, $lazyLoad = true)
    {
        $container->services['App\\Controller\\DSLRController'] = $instance = new \App\Controller\DSLRController();

        $instance->setContainer((new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'http_kernel' => ['services', 'http_kernel', 'getHttpKernelService', false],
            'parameter_bag' => ['privates', 'parameter_bag', 'getParameterBagService', false],
            'request_stack' => ['services', 'request_stack', 'getRequestStackService', false],
            'router' => ['services', 'router', 'getRouterService', false],
        ], [
            'http_kernel' => '?',
            'parameter_bag' => '?',
            'request_stack' => '?',
            'router' => '?',
        ]))->withContext('App\\Controller\\DSLRController', $container));

        return $instance;
    }
}
